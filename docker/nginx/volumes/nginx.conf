user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

load_module /usr/lib/nginx/modules/ndk_http_module.so;
load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;
load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;
load_module modules/ngx_http_modsecurity_module.so;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    lua_package_path "/etc/nginx/lua/?/?.lua;/etc/nginx/lua/?.lua;/etc/nginx/lua/lib/?.lua;;";

    default_type text/plain;

    # Configure the access log to use JSON format.

    log_format json_combined escape=json
        '{'
            '"type":"nginx_access_json",'
            '"time_iso8601":"$time_iso8601",'
            '"remote_addr":"$remote_addr",'
            '"remote_port":"$remote_port",'
            '"remote_user":"$remote_user",'
            '"host":"$host",'
            '"request":"$request",'
            '"status": "$status",'
            '"body_bytes_sent":$body_bytes_sent,'
            '"request_time":"$request_time",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"connection_serial_number":$connection'
        '}'
    ;

    access_log /var/log/nginx/access.log json_combined;

    # Disable inclusion of Nginx version number in the `Server` response header.
    # Note that this is redundant as the header is removed altogether in the compilation of Nginx.
    server_tokens off;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    gzip on;
    gzip_types *;

    brotli on;
    brotli_types *;

    client_body_buffer_size 1k;
    client_max_body_size 1k;

    # Map the `Accept` header value to a file extension. Used for choosing between `html` and `json` error pages.
    # NOTE: Not optimal. Does not handle lists.
    # TODO: Check with regex?
    map $http_accept $accept_ext {
        default html;
        application/json json;
    }

    map $remote_addr $proxy_forwarded_elem {
        ~^[0-9.]+$ "for=\"$remote_addr:$remote_port\"";
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]:$remote_port\"";
        default "for=unknown";
    }

    server {
        listen 443 ssl;

        set $my_request_body '';
        set $response_body '';

        server_rewrite_by_lua_block {
            ngx.ctx.my_request_body = ngx.req.get_body_data()
        }

        body_filter_by_lua_block {
            -- arg[1] contains a chunk of response content
            local resp_body = string.sub(ngx.arg[1], 1, 1000)
            ngx.ctx.buffered = string.sub((ngx.ctx.buffered or "") .. resp_body, 1, 1000)

            -- arg[2] is true if this is the last chunk
            if ngx.arg[2] then
                ngx.var.response_body = ngx.ctx.buffered
            end
        }

        log_by_lua_file /etc/nginx/lua/logging.lua;

        # SSL

        ssl_certificate /etc/nginx/ssl_certificate.crt;
        ssl_certificate_key /etc/nginx/ssl_certificate_key.key;

        ssl_session_cache shared:le_nginx_SSL:10m;
        ssl_session_timeout 1440m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        # Security response headers.

        # more_set_headers "Content-Security-Policy: default-src 'none'";
        more_set_headers "X-Frame-Options: SAMEORIGIN";
        more_set_headers "X-Content-Type-Options: nosniff";
        more_set_headers "X-XSS-Protection: 1; mode=block";
        more_set_headers "Referrer-Policy: same-origin";

        # add_header Strict-Transport-Security max-age=15768000;

        proxy_set_header Forwarded "$proxy_forwarded_elem;proto=$scheme;host=\"$http_host\"";

        include /etc/nginx/error_pages.conf;
        include /etc/nginx/conf.d/*;
    }
}

