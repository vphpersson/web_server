user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

load_module /usr/lib/nginx/modules/ndk_http_module.so;
load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;
load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;
load_module /usr/lib/nginx/modules/ngx_http_modsecurity_module.so;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    lua_package_path "/etc/nginx/lua/?/?.lua;/etc/nginx/lua/?.lua;/etc/nginx/lua/lib/?.lua;;";

    default_type text/plain;

    # Configure the access log to use JSON format.

    log_format json_combined escape=json
        '{'
            '"type":"nginx_access_json",'
            '"time_iso8601":"$time_iso8601",'
            '"remote_addr":"$remote_addr",'
            '"remote_port":"$remote_port",'
            '"remote_user":"$remote_user",'
            '"host":"$host",'
            '"request":"$request",'
            '"status": "$status",'
            '"body_bytes_sent":$body_bytes_sent,'
            '"request_time":"$request_time",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"connection_serial_number":$connection'
        '}'
    ;

    access_log /var/log/nginx/access.log json_combined;

    # Disable inclusion of Nginx version number in the `Server` response header.
    # Note that this is redundant as the header is removed altogether in the compilation of Nginx.
    server_tokens off;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    gzip on;
    gzip_types *;

    brotli on;
    brotli_types *;

    client_body_buffer_size 1k;
    client_max_body_size 1k;

    # Map the `Accept` header value to a file extension. Used for choosing between `html` and `json` error pages.
    # NOTE: Not optimal. Does not handle lists.
    # TODO: Check with regex?
    map $http_accept $accept_ext {
        default html;
        application/json json;
    }

    map $remote_addr $proxy_forwarded_elem {
        ~^[0-9.]+$ "for=\"$remote_addr:$remote_port\"";
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]:$remote_port\"";
        default "for=unknown";
    }

    # proxy_set_header Forwarded "$proxy_forwarded_elem;proto=$scheme;host=\"$http_host\"";

    include /etc/nginx/conf.d/sites/*;
}

